Studio 2 write up

Your TA's name:
Catherine Zhang


Students in your studio group:

    Name        Student ID (begins with a 4)
	
1.Yangchen Shen   439908
2.Jing Zhou 441637
3.
4.
5.
6.

Below each question, type in your short, to-the-point answers.

Part A

What do you see in the plots for ticks and time?
How would you characterize those curves?
Based on the current code for addLast, why do you see this behavior?

The plots for ticks and time are both quadratic. The ticks curve is smoother.
For addLast, we go through the whole list for each integer, so the plot for ticks is quadratic.

Part B

What behavior do you see now for appending n items to a list if you use a tail reference?
The plot for ticks is linear now because now it takes constant time to add a new item in the end.
Real time is very short so it's close to 0.

While we have reasoned so far only about time, if we are adding n elements to the end of a list, what is the asymptotic complexity of the additional space required when using the tail reference?
O(n).

Under what conditions would you recommend using a linked list with a tail reference vs. a linked list without a tail reference?
If we want to add something to the end, we should use a linked list with a tail. 
If we want to add something in the middle of the list, we should use a linked list without a tail.

Part C

Why does getSize() take the time it does?
Because it goes through each item of the list.

How did you achieve Î˜(1) performance for getSize()?
We can use a new variable called size, and add it by 1 each time we run the addLast function. 
So the getSize() function can just return size.
