-------------------
CSE247 Robot tester starts testing heaps on 2017-02-24 15:55:30 -0600

========
Testing in GradingRepos/repos/cse247-s17-students-sheny: heaps as of 2017-02-17 09:00
========
Now in: /Users/tdelanuez/cse247-support/GradingRepos/repos/cse247-s17-students-sheny
Going back in time to: 2017-02-17 09:00
At hash 9c5826251a86366e8ed8aa24305696f048a81cab
Your branch is up-to-date with 'origin/master'.
Updating 9c58262..babc9e1
Fast-forward
 RoboGrade/heaps.txt | 207 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 207 insertions(+)
 create mode 100644 RoboGrade/heaps.txt

Buildfile: /Users/tdelanuez/cse247-support/build.xml

copytest:
     [echo] would copy from /Users/tdelanuez/git/cse247-s17-students-adelanuez key sheny testfilesource test/TestMinHeap package heaps repo GradingRepos/repos/cse247-s17-students-sheny
     [copy] Copying 1 file to /Users/tdelanuez/cse247-support/GradingRepos/repos/cse247-s17-students-sheny/labs/heaps/test

BUILD SUCCESSFUL
Total time: 0 seconds
Compiling the code
Buildfile: /Users/tdelanuez/cse247-support/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [mkdir] Created dir: /Users/tdelanuez/cse247-support/GradingRepos/repos/cse247-s17-students-sheny/bin
    [javac] Compiling 1 source file to /Users/tdelanuez/cse247-support/GradingRepos/repos/cse247-s17-students-sheny/bin

BUILD SUCCESSFUL
Total time: 0 seconds
Buildfile: /Users/tdelanuez/cse247-support/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /Users/tdelanuez/cse247-support/GradingRepos/repos/cse247-s17-students-sheny/bin

BUILD SUCCESSFUL
Total time: 0 seconds
Running test test.TestMinHeap
Buildfile: /Users/tdelanuez/cse247-support/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               9                               
    [junit]                2                               3                               14                              12              
    [junit]        4               11              6               5               19              16              27              15      
    [junit]    8       7       41      31      13      18      24      23      20      32      36      35      29      30      28      22  
    [junit]  45  10  17  34  48  43  42  40  44  25  37  47  39  46  38  26  49  21  33
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.698 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               9                               
    [junit]                2                               3                               14                              12              
    [junit]        4               11              6               5               19              16              27              15      
    [junit]    8       7       41      31      13      18      24      23      20      32      36      35      29      30      28      22  
    [junit]  45  10  17  34  48  43  42  40  44  25  37  47  39  46  38  26  49  21  33
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.698 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                1                                                               9                               
    [junit]                2                               3                               14                              12              
    [junit]        4               11              6               5               19              16              27              15      
    [junit]    8       7       41      31      13      18      24      23      20      32      36      35      29      30      28      22  
    [junit]  45  10  17  34  48  43  42  40  44  25  37  47  39  46  38  26  49  21  33
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.017 sec
    [junit] Testcase: testEmptyHeap took 0 sec
    [junit] Testcase: testAndPrint took 0.028 sec
    [junit] Testcase: testExtractMin took 0.001 sec
    [junit] Testcase: testLocUpdatedHeapify took 0 sec
    [junit] Testcase: testInsert took 0.01 sec
    [junit] Testcase: testUsingHeapSort took 1.626 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 2 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2017-02-24 15:55:36 -0600
-------------------
